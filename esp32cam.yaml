esphome:
  name: esp32-cam
  platform: ESP32
  board: esp32dev  

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "***********************************************"

ota:
  - platform: esphome

web_server:
  port: 80

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esp32-Cam Fallback Hotspot"
    password: "C3FOhAPFtouw"

captive_portal:

# Example configuration entry
esp32_camera:
  external_clock:
    pin: GPIO0
    frequency: 20MHz
  i2c_pins:
    sda: GPIO26
    scl: GPIO27
  data_pins: [GPIO5, GPIO18, GPIO19, GPIO21, GPIO36, GPIO39, GPIO34, GPIO35]
  vsync_pin: GPIO25
  href_pin: GPIO23
  pixel_clock_pin: GPIO22
  power_down_pin: GPIO32

  # Image settings
  name: My ESP32-CAM 

# Flashlight
## GPIO_4 is the flash light pin
light:
  - platform: binary
    output: gpio_4
    name: flashlight
    
# Servo
servo:
  - id: test_servo
    output: test_servo_output
    auto_detach_time: 3s
    transition_length: 2s

output:
  - platform: ledc
    id: test_servo_output
    pin: GPIO15
    frequency: 50 Hz    

  - platform: gpio
    pin: GPIO4
    id: gpio_4

number:
  - platform: template
    name: 'Test Servo '
    id: test_servo_number
    min_value: -100
    initial_value: 0
    max_value: 100
    step: 10
    optimistic: true
    set_action:
      then:
        - servo.write:
            id: test_servo
            level: !lambda 'return x / 100.0;'    

button:
  - platform: template
    name: 'Servo Right'
    id: move_right
    on_press:
      - number.increment:
         id: test_servo_number
         cycle: false  

  - platform: template
    name: 'Servo Left'
    id: move_left
    on_press:
      - number.decrement:
         id: test_servo_number
         cycle: false  
